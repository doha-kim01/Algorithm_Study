# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Tg8yIZWlqZzAxbv2_D0FyFJU-bxEoc1k
"""

# 4963ë²ˆ

from collections import deque

def bfs(x, y):

  queue = deque()
  queue.append((x,y))
  
  ground[x][y] = 0

  dx = [-1, 1, 0, 0, 1, -1, -1, 1]
  dy = [0, 0, -1, 1, 1, -1, 1, -1]

  while queue:
    position = queue.popleft()
    for i in range(8):
      nx = position[0] + dx[i]
      ny = position[1] + dy[i]
      
      if 0 <= nx < h and 0 <= ny < w:
        if ground[nx][ny] == 1:
          ground[nx][ny] = 0
          queue.append((nx,ny))

while True:
  
  w, h = map(int, input().split())
  
  if w == 0 and h == 0:
    break
      
  ground = []
  result = 0

  for _ in range(h): 
    line = list(map(int, input().split())) 
    ground.append(line)
  
  for i in range(h): 
    for j in range(w): 
      if ground[i][j] != 0: 
        result += 1 
        bfs(i, j)
    
  print(result)